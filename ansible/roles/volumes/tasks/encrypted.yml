---
# encrypted.yml

# Generate LUKS volumes

- name: Master key mount point
  file:
    path: "{{ masterkey.path }}"
    state: directory

- name: Check for known_hosts entry
  command: ssh-keygen -F {{ masterkey.host }}
  register: key_exists
  changed_when: False
  ignore_errors: True

- name: Add known_hosts entry for keyserver
  shell: ssh-keyscan {{ masterkey.host }} >> /root/.ssh/known_hosts
  when: key_exists.rc != 0

- name: LUKS master ssh key
  copy:
    dest: "{{ masterkey.sshkey_private }}"
    content: "{{ vault_ssh_keys_private.masterkey }}"
    mode: 0400

- name: Master key mount
  mount:
    boot: False
    fstype: fuse.sshfs
    path: "{{ masterkey.path }}"
    src: "{{ masterkey.user }}@{{ masterkey.host }}:{{ masterkey.path }}"
    opts: _netdev,noauto,ro,IdentityFile={{ masterkey.sshkey_private }}
    state: mounted
  changed_when: False

- name: LUKS format volumes
  shell: >
    cryptsetup isLuks /dev/{{ item.value.vg }}/{{ item.key }} ||
    cryptsetup luksFormat --batch-mode --verbose --key-file={{
      masterkey.path }}/keys/{{ ansible_hostname }}/{{
      item.key }} /dev/{{ item.value.vg }}/{{ item.key }}
  register: luks_format
  changed_when: ("Command successful" in luks_format.stdout)
  with_dict: "{{ luks_volumes }}"

# Encountered bug in ansible crypttab module, lineinfile is good enough
- name: Create crypttab
  copy:
    content: ""
    dest: /etc/crypttab.setup
    mode: 0644
    force: no

- name: Crypt table entries
  lineinfile:
    line: "{{ 'luks-%-16s /dev/mapper/%s-%-16s %s/keys/%s/%-12s luks' % (
          item.key, item.value.vg, item.key, masterkey.path, ansible_hostname,
          item.key) }}"
    path: /etc/crypttab.setup
    regexp: "^luks-{{ item.key }}.*"
  with_dict: "{{ luks_volumes }}"

# For unattended boot, we have a custom startup script, so we don't
#  leave /etc/crypttab in place (Ubuntu systemd will otherwise
#  insist on entering passphrase at reboot)

- name: Temporary crypttab symlink
  file:
    path: /etc/crypttab
    src: crypttab.setup
    state: link
    force: True
  changed_when: False

- name: LUKS start volumes
  command: cryptdisks_start luks-{{ item.key }}
  register: luks_start
  changed_when: ("(started)" in luks_start.stdout)
  with_dict: "{{ luks_volumes }}"

- name: Create filesystem
  filesystem:
    dev: /dev/mapper/luks-{{ item.key }}
    fstype: "{{ item.value.type if 'type' in item.value else fs_type }}"
    opts: "{{ '-N %s000' % item.value.inodes if 'inodes' in item.value
      else '' }} -m 0"
  with_dict: "{{ luks_volumes }}"

- name: Remove temporary crypttab symlink
  file:
    path: /etc/crypttab
    state: absent
  changed_when: False

- name: crypt-setup boot script
  template:
    src: crypt-activate.sh.j2
    dest: /etc/crypt-activate.sh
    mode: 0755

- name: Systemd unit file for crypt-vols
  copy:
    dest: /etc/systemd/system/crypt-vols.service
    src: crypt-vols.service

- name: Add fstab entries
  mount:
    fstype: "{{ item.value.type if 'type' in item.value else fs_type }}"
    path: "{{ item.value.path }}"
    src: "/dev/mapper/luks-{{ item.key }}"
    opts: "{{ item.value.options if 'options' in item.value else '_netdev,noauto' }}"
    state: present
  with_dict: "{{ luks_volumes }}"

- name: Enable crypt-vols
  systemd:
    name: crypt-vols
    enabled: yes
    state: restarted
  changed_when: False

- name: Unmount master key
  mount:
    path: "{{ masterkey.path }}"
    state: unmounted
  changed_when: False
