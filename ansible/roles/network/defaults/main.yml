---
kernel_modules:
  - ip_vs

# This almost always needs to be specified in inventory, each host
#  comes up differently
network_interface_physical: eth0

network_defaults:
  address: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  addresses:
  -  "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}/24"
  gateway: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['gateway'] }}"
  interface: "{{ network_interface_physical }}"
  mode: dhcp
  nameservers: "{{ hostvars[inventory_hostname]['ansible_dns']['nameservers'] }}"
  netmask: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['netmask'] }}"
  routes:
  - to: default
    via: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['gateway'] }}"
  search: "{{ hostvars[inventory_hostname]['ansible_dns']['search'] }}"
  cluster_ip: null
  vrrp_interface: null

network_override: {}
network: "{{ network_defaults | combine(network_override) }}"

network_sysctl:
  net.ipv4.ip_nonlocal_bind: 1

sshd_opts:
  ciphers:
  - aes128-cbc
  - aes128-ctr
  - aes192-ctr
  - aes256-ctr
  kexalgorithms:
  - diffie-hellman-group-exchange-sha256
  macs: 
  - hmac-sha2-256
  - hmac-sha2-512
  - umac-64@openssh.com

ubuntu_packages:
  - bridge-utils
  - dnsutils
  - net-tools
  - psmisc

vrrp:
  VI_1:
    id: 50
    ip: "{{ network.cluster_ip }}"
    interface: "{{ network.vrrp_interface }}"
    priority: "{{ network.address.split('.')[3] }}"
    unicast_peers: "{{ groups['k8s_nodes'] | map('extract', hostvars,
                       ['ansible_default_ipv4', 'address']) | list |
                       difference([network.address]) }}"

netplan_unbridged:
  network:
    version: 2
    renderer: networkd

# Netplan configuration is very different when running with /dev/br0
netplan_bridged:
  network:
    version: 2
    renderer: networkd
    bridges:
      br0:
        addresses: "{{ network.addresses }}"
        gateway4: "{{ network.gateway }}"
        nameservers:
          search: "{{ ansible_dns.search }}"
          addresses: "{{ network.nameservers }}"
        parameters:
          stp: false
          forward-delay: 0
        routes: "{{ network.routes }}"
