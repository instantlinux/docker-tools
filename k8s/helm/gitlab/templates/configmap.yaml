apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "local.fullname" . }}
  labels:
    {{- include "local.labels" . | nindent 4 }}
data:
  gitlab.rb: |
    external_url 'http://{{ .Values.tlsHostname }}'
    gitlab_rails['backup_keep_time'] = 2592000
    gitlab_rails['db_adapter'] = 'postgresql'
    gitlab_rails['db_encoding'] = 'utf8'
    gitlab_rails['db_host'] = 'gitlab-postgres'
    gitlab_rails['db_port'] = 5432
    gitlab_rails['db_username'] = 'gitlab-psql'
    gitlab_rails['smtp_enable'] = true
    gitlab_rails['smtp_address'] = '{{ .Values.smtp.relayHost }}'
    gitlab_rails['smtp_domain'] = '{{ .Values.smtp.domain }}'
    gitlab_rails['smtp_enable_starttls_auto'] = true
    gitlab_rails['smtp_openssl_verify_mode'] = 'none'
    gitlab_rails['smtp_port'] = 25
    gitlab_rails['time_zone'] = '{{ .Values.deployment.env.tz }}'
    gitlab_shell['log_level'] = '{{ .Values.gitlab_shell.log_level }}'
    nginx['error_log_level'] = '{{ .Values.nginx.error_log_level }}'
    postgresql['enable'] = false
    # prometheus['flags'] = {
    #   'storage.tsdb.retention' => '3d',
    #   'config.file' => "#{node['gitlab']['prometheus']['home']}/prometheus.yml"
    # }
    prometheus_monitoring['enable'] = false
    registry['log_level'] = '{{ .Values.registry.log_level }}'
  gitback: |
    #!/bin/sh

    umask 077
    while [ 1 -eq 1 ]; do
      HOUR=$(date +%H)
      if [ $HOUR -eq 16 ]; then
        /opt/gitlab/bin/gitlab-backup create
        tar cjf /var/backups/gitlab/gitlab_etc_$(date +%Y%m%d%H).tar.bz /etc/gitlab
      fi
      sleep 3600
    done
