apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "local.fullname" . }}
  labels:
    {{- include "local.labels" . | nindent 4 }}
data:
  config.php: |-
    <?php
    $CONFIG = array (
      'apps_paths' => 
      array (
        0 => 
        array (
          'path' => '/var/www/html/apps',
          'url' => '/apps',
          'writable' => false,
        ),
        1 => 
        array (
          'path' => '/var/www/html/custom_apps',
          'url' => '/custom_apps',
          'writable' => true,
        ),
      ),
      # Entries generated by auto-installer: leave blank initially,
      # TODO set these env vars after auto-generation.
      'instanceid' => '{{ .Values.instanceID }}',
      'passwordsalt' => '{{ .Values.passwordSalt }}',
      'secret' => getenv('SECRET'),
      'version' => '{{ .Values.versionPrev }}',
      'trusted_domains' => array ('{{ .Values.fqdn }}'),
      'datadirectory' => '/var/www/html/data',
      'overwrite.cli.url' => 'https://{{ .Values.fqdn }}',
      'dbtype' => 'mysql',
      'dbname' => '{{ .Values.db.name }}',
      'dbhost' => '{{ .Values.db.host }}',
      'dbport' => '',
      'dbtableprefix' => 'oc_',
      'mysql.utf8mb4' => true,
      'dbuser' => '{{ .Values.db.user }}',
      'dbpassword' => getenv('DB_PASSWORD'),
      'installed' => true,
      'overwriteprotocol' => 'https',
      'ldapIgnoreNamingRules' => false,
      'ldapProviderFactory' => '\\OCA\\User_LDAP\\LDAPProviderFactory',
      'mail_smtpmode' => 'smtp',
      'mail_smtpauthtype' => 'LOGIN',
      'mail_from_address' => 'admin',
      'mail_domain' => '{{ .Values.fqdn }}',
      'mail_smtphost' => '{{ .Values.mailHost }}',
      'preview_max_x' => 256,
      'preview_max_y' => 256,
      'loglevel' => {{ .Values.loglevel }},
      'debug' => false,
      'maintenance' => false,
      'theme' => '',
      'trusted_proxies' => array ('10.244.0.0/16'),
      'memcache.distributed' => '\OC\Memcache\Redis',
      'memcache.local' => '\OC\Memcache\Redis',
      'memcache.locking' => '\OC\Memcache\Redis',
      'redis' => array(
        'host' => getenv('REDIS_HOST'),
        'port' => {{ .Values.redis.port }},
      ),
    )
    ?>
