# Default values for artifactory.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tlsHostname: artifactory.example.com
deployment:
  env:
    db_host: db00
    extra_java_options: -Xms1g -Xmx4g
    tz: UTC
  containerPorts:
  - { name: http, containerPort: 8081, protocol: TCP }
  resources:
    limits:
      memory: 4Gi
    requests:
      cpu: 200m
      memory: 1Gi
  strategy:
    type: Recreate
livenessProbe:
  httpGet:
    path: /artifactory/webapp/#/login
    port: http
  initialDelaySeconds: 600
readinessProbe:
  httpGet:
    path: /artifactory/webapp/#/login
    port: http
  initialDelaySeconds: 600
volumeMounts:
- name: data
  mountPath: /var/opt/jfrog/artifactory
  subPath: artifactory/data
- name: data
  mountPath: /opt/jfrog/artifactory/tomcat/lib/mysql-connector-java-5.1.40-bin.jar
  readOnly: true
  subPath: artifactory/mysql-connector-java-5.1.40.jar
volumes:
- name: data
  hostPath: { path: /var/lib/docker/k8s-volumes/share }

image:
  repository: docker.bintray.io/jfrog/artifactory-oss
  pullPolicy: IfNotPresent
  # tag: default

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false

service:
  clusterIP: None
  type: ClusterIP
  ports:
  - { port: 80, targetPort: http, protocol: TCP }

authelia:
  fqdn: authtotp.example.com
  ip: 10.101.1.5
ingress:
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-access-log: "false"

ingressTOTP:
  className: ""
  hosts:
  - host: repo.example.com
    paths:
    - path: /artifactory/webapp/[#]/login
      pathType: Prefix
    - path: /artifactory/ui/(oauth2/loginRequest|auth/login)
      pathType: Prefix
  
autoscaling:
  enabled: false
