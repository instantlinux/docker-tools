---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $K8S_NAMESPACE-privileged
  namespace: $K8S_NAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: $K8S_NAMESPACE:full-access-user
  namespace: $K8S_NAMESPACE
rules:
- apiGroups: ["", apps, autoscaling, extensions]
  resources:
  - componentstatuses
  - configmaps
  - daemonsets
  - deployments
  - deployments/scale
  - events
  - endpoints
  - horizontalpodautoscalers
  - ingresses
  - limitranges
  - pods
  - pods/attach
  - pods/exec
  - pods/log
  - podtemplates
  - persistentvolumes
  - persistentvolumeclaims
  - resourcequotas
  - replicasets
  - replicationcontrollers
  - rolebindings
  - roles
  - serviceaccounts
  - services
  - statefulsets
  - statefulsets/scale
  verbs: ["*"]
- apiGroups: [""]
  resources: [secrets]
  verbs:
  - create
  - delete
  - list
  # Helm requires these, alas; cannot limit to "sh.helm.release.*" -
  # https://github.com/kubernetes/kubernetes/issues/56582
  - get
  - update
- apiGroups: [batch]
  resources:
  - jobs
  - cronjobs
  verbs: ["*"]
- apiGroups: [cert-manager.io]
  resources:
  - certificates
  verbs: [get, list]
- apiGroups: [networking.k8s.io]
  resources:
  - ingresses
  verbs: ["*"]
- apiGroups: [rbac.authorization.k8s.io]
  resources:
  - rolebindings
  - roles
  verbs: ["*"]
- apiGroups: [certmanager.io]
  resources: [certificates]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $K8S_NAMESPACE:system-user
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - persistentvolumes
  - pods/status
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - services
  resourceNames:
  - kubernetes-dashboard
  - "https:kubernetes-dashboard:"
  verbs:
  - get
  - list
  - view
- apiGroups: [""]
  resources:
  - services/proxy
  resourceNames:
  - kubernetes-dashboard
  - "https:kubernetes-dashboard:"
  verbs:
  - get
  - list
  - view
  - create
- apiGroups: [rbac.authorization.k8s.io]
  resources:
  - clusterroles
  - roles
  verbs:
  - get
  - list
  - watch
- apiGroups: [storage.k8s.io]
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: $K8S_NAMESPACE-user-binding
  namespace: $K8S_NAMESPACE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: $K8S_NAMESPACE:full-access-user
subjects:
- kind: Group
  name: oidc_$K8S_NAMESPACE
  namespace: $K8S_NAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $K8S_NAMESPACE:system-user-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $K8S_NAMESPACE:system-user
subjects:
- kind: ServiceAccount
  name: $K8S_NAMESPACE-user
  namespace: $K8S_NAMESPACE
- kind: Group
  name: oidc_$K8S_NAMESPACE
  namespace: $K8S_NAMESPACE
---
# TODO - this is regular full-access, may need to add a privileged role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: $K8S_NAMESPACE-privileged-user
  namespace: $K8S_NAMESPACE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: $K8S_NAMESPACE:full-access-user
subjects:
- kind: ServiceAccount
  name: $K8S_NAMESPACE-privileged
  namespace: $K8S_NAMESPACE
---
# Instance permissions for ingress
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $K8S_NAMESPACE:ingress-pod
rules:
- apiGroups: ["", extensions]
  resources:
  - configmaps
  - endpoints
  - ingresses
  - nodes
  - pods
  - secrets
  - services
  verbs: [list, watch]
- apiGroups: [""]
  resources:
  - nodes
  verbs: [get]
- apiGroups: [""]
  resources:
  - events
  verbs: [create, patch]
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingresses
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $K8S_NAMESPACE:ingress-pod-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $K8S_NAMESPACE:ingress-pod
subjects:
- kind: ServiceAccount
  name: pod-ingress-privileged
  namespace: $K8S_NAMESPACE
