---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  namespace: $K8S_NAMESPACE
  labels:
    k8s-app: nginx-ingress-controller
spec:
  clusterIP: $K8S_INGRESS_NGINX_IP
  selector:
    k8s-app: nginx-ingress-controller
  ports:
    - { port: 80, targetPort: 80, name: http }
    - { port: 443, targetPort: 443, name: https }
    - { port: $PORT_GITLAB_SSH, name: git-ssh }
  sessionAffinity: ClientIP
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-external
  namespace: $K8S_NAMESPACE
spec:
  type: NodePort
  ports:
  - { port: 80, nodePort: $NODEPORT_HTTP, targetPort: 80, name: http }
  - { port: 443, nodePort: $NODEPORT_HTTPS, targetPort: 443, name: https }
  selector:
    k8s-app: nginx-ingress-controller
  sessionAffinity: ClientIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: $K8S_NAMESPACE
  labels:
    k8s-app: nginx-ingress-controller
spec:
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      k8s-app: nginx-ingress-controller
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
        name: nginx-ingress-controller
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      # - image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:$VERSION_INGRESS_NGINX
      - image: registry.k8s.io/ingress-nginx/controller:v$VERSION_INGRESS_NGINX
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --ingress-class=nginx
        - --election-id=ingress-controller-leader-external
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --tcp-services-configmap=$K8S_NAMESPACE/ingress-tcp-services
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 50m
            memory: 192Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - nginx-ingress-controller
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: pod-ingress-privileged
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: $K8S_NAMESPACE
  labels:
    app.kubernetes.io/name: default-http-backend
spec:
  clusterIP: None
  ports:
  - { port: 80, targetPort: 8080 }
  selector:
    app.kubernetes.io/name: default-http-backend
---
# default backend for requests with unknown routes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: $K8S_NAMESPACE
  labels:
    app.kubernetes.io/name: default-http-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: default-http-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        image: gcr.io/google_containers/defaultbackend-amd64:$VERSION_DEFAULTBACKEND
        ports:
        - containerPort: 8080
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress-pod-user
  namespace: $K8S_NAMESPACE
rules:
- apiGroups: [""]
  resources:
  - pods
  - services
  verbs: [get, list]
- apiGroups: [""]
  resources:
  - configmaps
  - events
  verbs: [create, get, list, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-user-binding
  namespace: $K8S_NAMESPACE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-pod-user
subjects:
- kind: ServiceAccount
  name: pod-ingress-privileged
  namespace: $K8S_NAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: nginx-ingress-controller
    name: nginx-ingress-controller
  name: nginx-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - "networking.k8s.io"
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs: [create, get, list, update]
  - apiGroups:
      - "discovery.k8s.io"
    resources:
      - endpointslices
    verbs: [get, list]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: nginx-ingress-controller
    name: nginx-ingress-controller
  name: nginx-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-controller
subjects:
  - kind: ServiceAccount
    name: pod-ingress-privileged
    namespace: $K8S_NAMESPACE
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-ingress-privileged
  namespace: $K8S_NAMESPACE
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-tcp-services
  namespace: $K8S_NAMESPACE
data:
  $PORT_GITLAB_SSH: $K8S_NAMESPACE/gitlab:$PORT_GITLAB_SSH
  $PORT_POSTFIX_EXTERNAL: $K8S_NAMESPACE/postfix:$PORT_POSTFIX_EXTERNAL
  $PORT_DOVECOT_IMAPD: $K8S_NAMESPACE/dovecot:$PORT_DOVECOT_IMAPD
  $PORT_DOVECOT_IMAPS: $K8S_NAMESPACE/dovecot:$PORT_DOVECOT_IMAPS
  $PORT_DOVECOT_SMTP: $K8S_NAMESPACE/dovecot:$PORT_DOVECOT_SMTP
