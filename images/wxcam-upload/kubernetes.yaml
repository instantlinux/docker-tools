---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
spec:
  clusterIP: $WXCAM_UPLOAD_IP
  ports:
  - { port: 21, targetPort: 21, name: ftp }
  - { port: 30081, targetPort: 30081, name: pasv1 }
  - { port: 30082, targetPort: 30082, name: pasv2 }
  - { port: 30083, targetPort: 30083, name: pasv3 }
  - { port: 30084, targetPort: 30084, name: pasv4 }
  - { port: 30085, targetPort: 30085, name: pasv5 }
  - { port: 30086, targetPort: 30086, name: pasv6 }
  - { port: 30087, targetPort: 30087, name: pasv7 }
  - { port: 30088, targetPort: 30088, name: pasv8 }
  - { port: 30089, targetPort: 30089, name: pasv9 }
  - { port: 30090, targetPort: 30090, name: pasv10 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: CAMS, value: $WXCAM_CAMS }
        - { name: PASV_ADDRESS, value: $WXCAM_UPLOAD_IP }
        - { name: UPLOAD_USERNAME, value: $WXCAM_UPLOAD_USERNAME }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/$SERVICE_NAME:$VERSION_WXCAM_UPLOAD
        ports:
        - containerPort: 21
        - containerPort: 30080
        - containerPort: 30081
        - containerPort: 30082
        - containerPort: 30083
        - containerPort: 30084
        - containerPort: 30085
        - containerPort: 30086
        - containerPort: 30087
        - containerPort: 30088
        - containerPort: 30089
        - containerPort: 30090
        volumeMounts:
        - mountPath: /home/wx/upload
          name: synced
        - name: wunderground-pw-cam
          mountPath: /run/secrets/wunderground-pw-cam
        - name: wxcam-password-hashed
          mountPath: /run/secrets/wxcam-password-hashed
          subPath: wxcam-password-hashed
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: use-vc
        - name: ndots
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.$SERVICE_NAME: allow
      volumes:
      - name: synced
        hostPath: { path: $K8S_VOLUMES_PATH/wx }
      - name: wunderground-pw-cam
        secret:
          secretName: wunderground-pw-cam
      - name: wxcam-password-hashed
        secret:
          secretName: wxcam-password-hashed
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-sync
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
spec:
  clusterIP: None
  ports:
  - { port: 22, targetPort: 22 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
  name: $SERVICE_NAME-sync
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME-sync
      release: "0.1"
  serviceName: $SERVICE_NAME-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME-sync
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME-sync
        env:
        - name: PUBKEY1
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey1
        - name: PUBKEY2
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey2
        - { name: SYNC_INTERVAL, value: "20" }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/data-sync:$VERSION_DATA_SYNC
        ports:
        - containerPort: 22
        resources:
          limits:
            memory: 1536Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: archive
          mountPath: /root/.unison
        - name: config-sync
          mountPath: /etc/unison.d/common.prf
          subPath: common.prf
        - mountPath: /etc/ssh
          name: etc
        - mountPath: /var/log/unison
          name: logs
        - mountPath: /var/data-sync/wx
          name: wx
        - mountPath: /run/secrets/data-sync-sshkey1
          name: sshkeys
          subPath: sshkey1
        - mountPath: /run/secrets/data-sync-sshkey2
          name: sshkeys
          subPath: sshkey2
      nodeSelector:
        service.$SERVICE_NAME: allow
      volumes:
      - name: config-sync
        configMap:
          name: data-sync
      - name: sshkeys
        secret:
          secretName: $DATA_SYNC_SECRET
      - name: logs
        hostPath: { path: $K8S_VOLUMES_PATH/sync-logs/$SERVICE_NAME }
  volumeClaimTemplates:
  - metadata:
      name: archive
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: etc
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: wx
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: wx
