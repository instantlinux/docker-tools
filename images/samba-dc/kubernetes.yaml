---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
  name: $SERVICE_NAME
  namespace: $K8S_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
      release: "0.1"
  serviceName: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DOMAIN_ACTION, value: join }
        - { name: INTERFACES, value: $SAMBADC_INTERFACES }
        - { name: NETBIOS_NAME, value: $SERVICE_NAME }
        - { name: REALM, value: $SAMBA_REALM }
        - { name: TZ, value: $TZ }
        - { name: WORKGROUP, value: $SAMBA_WORKGROUP }
        image: $REGISTRY_URI/samba-dc:$VERSION_SAMBA_DC
        resources:
          limits:
            cpu: 500m
            memory: 2560Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/samba
          name: var
        - mountPath: /run/secrets/samba-admin-password
          name: samba-admin-password
          subPath: samba-admin-password
      dnsConfig:
        nameservers: [ $BIND_IP ]
      # TODO: this will join with incorrect hostname until the following
      #  directive is actually implemented when hostNetwork=true.
      #  See issue https://github.com/kubernetes/kubernetes/issues/67019
      hostname: $SERVICE_NAME.$SAMBA_REALM
      hostNetwork: true
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.$SERVICE_NAME: allow
      serviceAccountName: $K8S_NAMESPACE-privileged
      volumes:
      - name: samba-admin-password
        secret:
          secretName: samba-admin-password
  volumeClaimTemplates:
  - metadata:
      name: var
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 500Mi
